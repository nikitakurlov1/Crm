// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –¥–ª—è PWA
if ('serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator.serviceWorker.register('/service-worker.js')
      .then(registration => {
        console.log('Service Worker registered successfully:', registration);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è service worker
        registration.addEventListener('updatefound', () => {
          const newWorker = registration.installing;
          newWorker.addEventListener('statechange', () => {
            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
              // –ù–æ–≤—ã–π service worker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
              console.log('New service worker installed. Refresh to update.');
              
              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –¥–æ—Å—Ç—É–ø–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
              if (confirm('–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –û–±–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å?')) {
                window.location.reload();
              }
            }
          });
        });
      })
      .catch(error => {
        console.error('Service Worker registration failed:', error);
      });
  });
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let deferredPrompt;
let installButton = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
function checkPWAInstallStatus() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  if (isPWAInstalled()) {
    console.log('PWA is already installed');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫–ª–æ–Ω–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ä–∞–Ω–µ–µ
  if (localStorage.getItem('pwa-install-dismissed') === 'true') {
    console.log('User previously dismissed PWA install');
    return;
  }
  
  window.addEventListener('beforeinstallprompt', (e) => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–∫–∞–∑ prompt
    e.preventDefault();
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–∑–∂–µ
    deferredPrompt = e;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    setTimeout(() => {
      showInstallButton();
    }, 2000); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  window.addEventListener('appinstalled', (evt) => {
    console.log('PWA installed successfully');
    localStorage.setItem('pwa-installed', 'true');
    hideInstallButton();
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ —á–∞—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    window.dispatchEvent(new CustomEvent('pwa-installed'));
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ standalone —Ä–µ–∂–∏–º–µ
  if (window.matchMedia('(display-mode: standalone)').matches || 
      window.navigator.standalone === true) {
    console.log('PWA is running in standalone mode');
    localStorage.setItem('pwa-installed', 'true');
    return;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ PWA
function isPWAInstalled() {
  return localStorage.getItem('pwa-installed') === 'true' ||
         window.matchMedia('(display-mode: standalone)').matches ||
         window.navigator.standalone === true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
function showInstallButton() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  if (isPWAInstalled()) {
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫–ª–æ–Ω–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–∫—É
  if (localStorage.getItem('pwa-install-dismissed') === 'true') {
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  if (!document.getElementById('pwa-install-btn')) {
    installButton = document.createElement('div');
    installButton.id = 'pwa-install-btn';
    installButton.innerHTML = `
      <div class="pwa-install-content">
        <div class="pwa-install-icon">üì±</div>
        <div class="pwa-install-text">
          <div class="pwa-install-title">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SellBit</div>
          <div class="pwa-install-subtitle">–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–µ</div>
        </div>
        <button class="pwa-install-button">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å</button>
        <button class="pwa-install-close">‚úï</button>
      </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    installButton.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 10000;
      background: linear-gradient(135deg, #0066CC 0%, #004499 100%);
      color: white;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 102, 204, 0.3);
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      max-width: 320px;
      width: calc(100vw - 40px);
      transform: translateX(100%);
      transition: transform 0.3s ease;
      overflow: hidden;
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const style = document.createElement('style');
    style.textContent = `
      .pwa-install-content {
        display: flex;
        align-items: center;
        padding: 16px;
        gap: 12px;
      }
      
      .pwa-install-icon {
        font-size: 24px;
        flex-shrink: 0;
      }
      
      .pwa-install-text {
        flex: 1;
        min-width: 0;
      }
      
      .pwa-install-title {
        font-weight: 600;
        font-size: 14px;
        margin-bottom: 2px;
      }
      
      .pwa-install-subtitle {
        font-size: 12px;
        opacity: 0.8;
        line-height: 1.3;
      }
      
      .pwa-install-button {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);
        padding: 8px 16px;
        border-radius: 6px;
        font-size: 12px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        flex-shrink: 0;
      }
      
      .pwa-install-button:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-1px);
      }
      
      .pwa-install-close {
        background: none;
        color: rgba(255, 255, 255, 0.7);
        border: none;
        font-size: 16px;
        cursor: pointer;
        padding: 4px;
        border-radius: 4px;
        transition: all 0.2s ease;
        flex-shrink: 0;
      }
      
      .pwa-install-close:hover {
        color: white;
        background: rgba(255, 255, 255, 0.1);
      }
      
      @media (max-width: 480px) {
        #pwa-install-btn {
          top: 10px;
          right: 10px;
          left: 10px;
          width: auto;
        }
        
        .pwa-install-content {
          padding: 12px;
          gap: 8px;
        }
        
        .pwa-install-title {
          font-size: 13px;
        }
        
        .pwa-install-subtitle {
          font-size: 11px;
        }
        
        .pwa-install-button {
          padding: 6px 12px;
          font-size: 11px;
        }
      }
    `;
    document.head.appendChild(style);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    const installBtn = installButton.querySelector('.pwa-install-button');
    const closeBtn = installButton.querySelector('.pwa-install-close');
    
    installBtn.addEventListener('click', () => {
      if (deferredPrompt) {
        deferredPrompt.prompt();
        deferredPrompt.userChoice.then((choiceResult) => {
          if (choiceResult.outcome === 'accepted') {
            console.log('User accepted the install prompt');
            localStorage.setItem('pwa-installed', 'true');
          } else {
            console.log('User dismissed the install prompt');
            localStorage.setItem('pwa-install-dismissed', 'true');
          }
          deferredPrompt = null;
          hideInstallButton();
        });
      }
    });
    
    closeBtn.addEventListener('click', () => {
      localStorage.setItem('pwa-install-dismissed', 'true');
      hideInstallButton();
    });
    
    document.body.appendChild(installButton);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
      installButton.style.transform = 'translateX(0)';
    }, 100);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
function hideInstallButton() {
  if (installButton) {
    installButton.style.transform = 'translateX(100%)';
    setTimeout(() => {
      if (installButton && installButton.parentNode) {
        installButton.remove();
        installButton = null;
      }
    }, 300);
  }
  
  // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ header
  hideHeaderInstallButton();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ header
function hideHeaderInstallButton() {
  const headerBtn = document.getElementById('pwaInstallHeaderBtn');
  if (headerBtn) {
    headerBtn.style.display = 'none';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ header
function showHeaderInstallButton() {
  const headerBtn = document.getElementById('pwaInstallHeaderBtn');
  if (headerBtn && !isPWAInstalled()) {
    headerBtn.style.display = 'flex';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
function resetPWAInstallState() {
  localStorage.removeItem('pwa-installed');
  localStorage.removeItem('pwa-install-dismissed');
  console.log('PWA install state reset');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
document.addEventListener('DOMContentLoaded', () => {
  checkPWAInstallStatus();
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
window.PWA = {
  showInstallButton,
  hideInstallButton,
  checkPWAInstallStatus,
  isPWAInstalled,
  resetPWAInstallState,
  showHeaderInstallButton,
  hideHeaderInstallButton
};
