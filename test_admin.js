// Using built-in fetch in Node.js

async function testAdminAccess() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏...');
        
        // Step 1: Login
        console.log('1. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...');
        const loginResponse = await fetch('http://localhost:3000/api/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: 'admin@salebit.com',
                password: 'Zxcv1236'
            })
        });
        
        if (!loginResponse.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
        }
        
        const loginData = await loginResponse.json();
        console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω');
        console.log('–¢–æ–∫–µ–Ω:', loginData.token ? '–ü–æ–ª—É—á–µ–Ω' : '–ù–µ –ø–æ–ª—É—á–µ–Ω');
        
        // Step 2: Get user permissions
        console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const permissionsResponse = await fetch('http://localhost:3000/api/user/permissions', {
            headers: {
                'Authorization': `Bearer ${loginData.token}`
            }
        });
        
        if (!permissionsResponse.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤');
        }
        
        const permissionsData = await permissionsResponse.json();
        console.log('‚úÖ –ü—Ä–∞–≤–∞ –ø–æ–ª—É—á–µ–Ω—ã');
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', permissionsData.data.user.username);
        console.log('–†–æ–ª–∏:', permissionsData.data.user.roles);
        console.log('–ü—Ä–∞–≤–∞:', permissionsData.data.permissions);
        
        // Step 3: Test admin endpoints
        console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω endpoints...');
        
        // Test roles endpoint
        const rolesResponse = await fetch('http://localhost:3000/api/roles', {
            headers: {
                'Authorization': `Bearer ${loginData.token}`
            }
        });
        
        if (rolesResponse.ok) {
            const rolesData = await rolesResponse.json();
            console.log('‚úÖ –†–æ–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã:', rolesData.data.length, '—Ä–æ–ª–µ–π');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π:', rolesResponse.status);
        }
        
        // Test admin users endpoint
        const adminUsersResponse = await fetch('http://localhost:3000/api/admin/users', {
            headers: {
                'Authorization': `Bearer ${loginData.token}`
            }
        });
        
        if (adminUsersResponse.ok) {
            const adminUsersData = await adminUsersResponse.json();
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã:', adminUsersData.data.users.length, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏:', adminUsersResponse.status);
        }
        
        // Test activity log endpoint
        const activityResponse = await fetch('http://localhost:3000/api/admin/activity-log?limit=5', {
            headers: {
                'Authorization': `Bearer ${loginData.token}`
            }
        });
        
        if (activityResponse.ok) {
            const activityData = await activityResponse.json();
            console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—É—á–µ–Ω–∞:', activityData.data.length, '–∑–∞–ø–∏—Å–µ–π');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π:', activityResponse.status);
        }
        
        console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üîë –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

testAdminAccess();
